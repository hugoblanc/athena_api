name: PostgreSQL service example
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:16-alpine3.14

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: mysql
        ports:
          - '3306:3306'
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: athenauser
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: athena
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: npm run test:e2e
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: db
          # The default PostgreSQL port
          POSTGRES_PORT: 3306
